module rra_test;
	reg clk;
	reg rst_n;
	reg [3:0] REQ;
 	wire [3:0] GNT;
   round_robin_arbiter DUT(clk,rst_n,REQ,GNT);
	always #5 clk= ~clk;
initial
	begin 
		clk=0;
		rst_n=0;
		REQ=4'b0000;

#5 rst_n=1;
	@(negedge clk) REQ=4'b1111;
	@(negedge clk) REQ=4'b1111;
	@(negedge clk) REQ=4'b1111;
	@(negedge clk) REQ=4'b1111;
	@(negedge clk) REQ=4'b1111;
	@(negedge clk) REQ=4'b1110;
	@(negedge clk) REQ=4'b0100;
	@(negedge clk) REQ=4'b1010;
	@(negedge clk) REQ=4'b0111;
	@(negedge clk) REQ=4'b1010;
	@(negedge clk) REQ=4'b0111;
	@(negedge clk) REQ=4'b1010;
	@(negedge clk) REQ=4'b0100;
#5 rst_n=0;
#100 $finish;
         end

 initial 
      begin 
            $dumpfile("round_robin_arbiter.vcd");
            $dumpvars(0,rra_test);
        
      end 
endmodule